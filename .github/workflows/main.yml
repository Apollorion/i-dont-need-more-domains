name: 'main'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  main:
    name: 'main'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Install NPM/yarn
    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    # Install dependencies
    - name: Yarn Install
      run: cd idnmd && yarn install

    # Test Application
    - name: Yarn Test
      run: cd idnmd && yarn test

    # Build Application
    - name: Yarn Build
      run: cd idnmd && yarn build

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: cd terraform && terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: cd terraform && terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: cd terraform && terraform plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: cd terraform && terraform apply -auto-approve
